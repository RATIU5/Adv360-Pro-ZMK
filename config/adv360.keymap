#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

/ {
    behaviors {
        #include "macros.dtsi"

        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick_tap_ms = <175>;
            flavor = "tap-preferred";
            bindings =
                <&kp>,
                <&kp>;
        };
        spc_shft: spc_shft {
            compatible = "zmk,behavior-hold-tap";
            label = "SPC_SHFT";
            bindings =
                <&kp>,
                <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <250>;
            quick-tap-ms = <175>;
            flavor = "balanced";
        };
        quexcl: quexcl {
            compatible = "zmk,behavior-mod-morph";
            label = "QUEXCL";
            bindings =
                <&kp QUESTION>,
                <&kp EXCL>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        semicomma: semicomma {
            compatible = "zmk,behavior-mod-morph";
            label = "SEMICOMMA";
            bindings =
                <&kp COMMA>,
                <&kp SEMI>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        percolon: percolon {
            compatible = "zmk,behavior-mod-morph";
            label = "PERCOLON";
            bindings =
                <&kp PERIOD>,
                <&kp COLON>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&none       &kp N1          &kp N2            &kp N3        &kp N4            &kp N5  &none                                                                            &none                        &kp N6  &kp N7             &kp N8         &kp N9             &kp N0            &none
&kp DELETE  &kp Q           &kp W             &kp F         &kp P             &kp B   &none                                                                            &none                        &kp J   &kp L              &kp U          &kp Y              &kp SINGLE_QUOTE  &kp BACKSPACE
&kp TAB     &kp A           &kp R             &kp S         &kp T             &kp G   &none  &kp LEFT_SHIFT  &kp LEFT_CONTROL      &kp RIGHT_CONTROL  &kp RIGHT_SHIFT  &none                        &kp M   &kp N              &kp E          &kp I              &kp O             &kp ENTER
&kp ESCAPE  &kp Z           &kp X             &kp C         &kp D             &kp V                          &kp LEFT_ALT          &kp RIGHT_ALT                                                    &kp K   &kp H              &semicomma     &percolon          &quexcl           &kp ESCAPE
&none       &kp LEFT_SHIFT  &kp LEFT_CONTROL  &kp LEFT_ALT  &kp LEFT_COMMAND          &mo 2  &mo 1           &kp LEFT_GUI          &kp RGUI           &mo 3            &spc_shft RIGHT_SHIFT SPACE          &kp RIGHT_COMMAND  &kp RIGHT_ALT  &kp RIGHT_CONTROL  &kp RIGHT_SHIFT   &none
            >;
        };

        symbols {
            bindings = <
&kp F1  &kp F2     &kp F3          &kp F4                &kp F5         &kp F6        &none                                       &none   &kp F7         &kp F8     &kp F9                 &kp F10           &kp F11      &kp F12
&trans  &kp CARET  &kp LESS_THAN   &kp LEFT_BRACKET      &kp PIPE       &kp QUESTION  &none                                       &none   &kp EXCL       &kp AT     &kp RIGHT_BRACKET      &kp GREATER_THAN  &kp PERCENT  &trans
&trans  &kp EQUAL  &kp LEFT_BRACE  &kp LEFT_PARENTHESIS  &kp UNDER      &kp COLON     &none   &trans  &trans      &trans  &trans  &none   &kp SEMICOLON  &kp MINUS  &kp RIGHT_PARENTHESIS  &kp RIGHT_BRACE   &kp SLASH    &trans
&trans  &kp GRAVE  &kp AMPS        &kp STAR              &kp BACKSLASH  &kp DOT                       &trans      &trans                  &kp COMMA      &kp PLUS   &kp DOLLAR             &kp HASH          &kp TILDE    &trans
&trans  &trans     &trans          &trans                &trans                       &trans  &trans  &trans      &trans  &trans  &trans                 &trans     &trans                 &trans            &trans       &trans
            >;
        };

        arrows {
            bindings = <
&trans  &trans      &trans          &trans        &trans     &trans  &trans                                      &trans  &trans  &trans    &trans    &trans        &trans         &trans
&trans  &trans      &trans          &kp UP_ARROW  &trans     &trans  &trans                                      &trans  &trans  &trans    &trans    &trans        &trans         &trans
&trans  &trans      &kp LEFT_ARROW  &kp DOWN      &kp RIGHT  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &kp LEFT  &kp DOWN  &kp UP_ARROW  &kp RIGHT      &trans
&trans  &kp DELETE  &kp TAB         &trans        &trans     &trans                  &trans      &trans                  &trans  &trans    &trans    &kp RET       &kp BACKSPACE  &trans
&trans  &trans      &trans          &trans        &trans             &trans  &trans  &trans      &trans  &trans  &trans          &trans    &trans    &trans        &trans         &trans
            >;
        };

        numbers {
            bindings = <
&trans  &trans           &trans           &trans           &trans           &trans  &trans                                      &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans           &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &trans  &trans                                      &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp KP_NUMBER_0  &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans           &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &trans                  &trans      &trans                  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans           &trans           &trans           &trans                   &trans  &trans  &trans      &trans  &trans  &trans          &trans  &trans  &trans  &trans  &trans
            >;
        };
    };
};
