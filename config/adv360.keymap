#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

/ {
    behaviors {
        #include "macros.dtsi"

        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick_tap_ms = <175>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };

        spc_shft: spc_shft {
            compatible = "zmk,behavior-hold-tap";
            label = "SPC_SHFT";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <175>;
            quick-tap-ms = <150>;
            flavor = "balanced";
        };

        quexcl: quexcl {
            compatible = "zmk,behavior-mod-morph";
            label = "QUEXCL";
            bindings = <&kp QUESTION>, <&kp EXCL>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        semicomma: semicomma {
            compatible = "zmk,behavior-mod-morph";
            label = "SEMICOMMA";
            bindings = <&kp COMMA>, <&kp SEMI>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        percolon: percolon {
            compatible = "zmk,behavior-mod-morph";
            label = "PERCOLON";
            bindings = <&kp PERIOD>, <&kp COLON>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        lparen: lparen {
            compatible = "zmk,behavior-mod-morph";
            label = "LPAREN";
            bindings = <&kp LEFT_PARENTHESIS>, <&kp NUMBER_4>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        rparen: rparen {
            compatible = "zmk,behavior-mod-morph";
            label = "RPAREN";
            bindings = <&kp RIGHT_PARENTHESIS>, <&kp N7>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        lbracket: lbracket {
            compatible = "zmk,behavior-mod-morph";
            label = "LBRACKET";
            bindings = <&kp LEFT_BRACKET>, <&kp NUMBER_2>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        rbracket: rbracket {
            compatible = "zmk,behavior-mod-morph";
            label = "RBRACKET";
            bindings = <&kp RIGHT_BRACKET>, <&kp N9>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        lbrace: lbrace {
            compatible = "zmk,behavior-mod-morph";
            label = "LBRACE";
            bindings = <&kp LEFT_BRACE>, <&kp NUMBER_3>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        rbrace: rbrace {
            compatible = "zmk,behavior-mod-morph";
            label = "RBRACE";
            bindings = <&kp RIGHT_BRACE>, <&kp N8>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        langle: langle {
            compatible = "zmk,behavior-mod-morph";
            label = "LANGLE";
            bindings = <&kp LESS_THAN>, <&kp N5>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        rangle: rangle {
            compatible = "zmk,behavior-mod-morph";
            label = "RANGLE";
            bindings = <&kp GREATER_THAN>, <&kp N6>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        plus1: plus1 {
            compatible = "zmk,behavior-mod-morph";
            label = "PLUS1";
            bindings = <&kp PLUS>, <&kp N1>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        minus0: minus0 {
            compatible = "zmk,behavior-mod-morph";
            label = "MINUS0";
            bindings = <&kp KP_MINUS>, <&kp N0>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        equal_under: equal_under {
            compatible = "zmk,behavior-mod-morph";
            label = "EQUAL_UNDER";
            bindings = <&kp EQUAL>, <&kp UNDER>;

            #binding-cells = <0>;
            mods = <(MOD_RSFT|MOD_LSFT)>;
        };

        at_hash: at_hash {
            compatible = "zmk,behavior-mod-morph";
            label = "AT_HASH";
            bindings = <&kp AT>, <&kp HASH>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        dollar_perc: dollar_perc {
            compatible = "zmk,behavior-mod-morph";
            label = "DOLLAR_PERC";
            bindings = <&kp DOLLAR>, <&kp PERCENT>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        amp_caret: amp_caret {
            compatible = "zmk,behavior-mod-morph";
            label = "AMP_CARET";
            bindings = <&kp AMPS>, <&kp CARET>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
    };

    combos { compatible = "zmk,combos"; };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&none  &none             &none        &none           &none               &none  &none                                                    &none                        &none  &none                &none            &none        &none              &none
&none  &kp Q             &kp W        &kp F           &kp P               &kp B  &none                                                    &none                        &kp J  &kp L                &kp U            &kp Y        &kp SQT            &none
&none  &hm LEFT_SHIFT A  &hm LCTRL R  &hm LEFT_ALT S  &hm LEFT_COMMAND T  &kp G  &none      &none      &none      &none  &none            &none                        &kp M  &hm RIGHT_COMMAND N  &hm RIGHT_ALT E  &hm RCTRL I  &hm RIGHT_SHIFT O  &none
&none  &kp Z             &kp X        &kp C           &kp D               &kp V                        &none      &none                                                &kp K  &kp H                &semicomma       &percolon    &quexcl            &none
&none  &none             &none        &none           &none                      &lt 1 RET  &lt 2 TAB  &none      &none  &lt 3 BACKSPACE  &spc_shft RIGHT_SHIFT SPACE         &none                &none            &none        &none              &none
            >;
        };

        symbols {
            bindings = <
&trans  &trans                    &trans                  &trans                   &trans                             &trans            &none                                       &none   &trans             &trans                               &trans                     &trans                   &trans                        &trans
&trans  &kp TILDE                 &kp AT                  &kp HASH                 &kp DOLLAR                         &kp PERCENT       &none                                       &none   &kp CARET          &kp AMPS                             &kp ASTRK                  &kp MINUS                &kp EQUAL                     &trans
&trans  &hm LEFT_SHIFT LESS_THAN  &hm LCTRL LEFT_BRACKET  &hm LEFT_ALT LEFT_BRACE  &hm LEFT_COMMAND LEFT_PARENTHESIS  &kp UNDER         &none   &trans  &trans      &trans  &trans  &none   &kp PLUS           &hm RIGHT_COMMAND RIGHT_PARENTHESIS  &hm RIGHT_ALT RIGHT_BRACE  &hm RCTRL RIGHT_BRACKET  &hm RIGHT_SHIFT GREATER_THAN  &trans
&trans  &kp GRAVE                 &kp PIPE                &kp SLASH                &kp BACKSLASH                      &kp SINGLE_QUOTE                  &trans      &trans                  &kp DOUBLE_QUOTES  &kp COMMA                            &kp SEMICOLON              &kp COLON                &kp PERIOD                    &trans
&trans  &trans                    &trans                  &trans                   &trans                                               &trans  &trans  &trans      &trans  &trans  &trans                     &trans                               &trans                     &trans                   &trans                        &trans
            >;
        };

        arrows {
            bindings = <
&trans  &trans      &trans          &trans        &trans     &trans  &trans                                      &trans  &trans    &trans    &trans        &trans     &trans  &trans
&trans  &trans      &kp DELETE      &kp UP_ARROW  &trans     &trans  &trans                                      &trans  &trans    &trans    &trans        &trans     &trans  &trans
&trans  &kp ESCAPE  &kp LEFT_ARROW  &kp DOWN      &kp RIGHT  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &kp LEFT  &kp DOWN  &kp UP_ARROW  &kp RIGHT  &trans  &trans
&trans  &trans      &trans          &trans        &trans     &trans                  &trans      &trans                  &trans    &trans    &trans        &trans     &trans  &trans
&trans  &trans      &trans          &trans        &trans             &trans  &trans  &trans      &trans  &trans  &trans            &trans    &trans        &trans     &trans  &trans
            >;
        };

        numbers {
            bindings = <
&trans  &trans  &trans        &trans        &trans        &trans  &trans                                      &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &kp N7        &kp N8        &kp N9        &trans  &trans                                      &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp N0  &kp NUMBER_4  &kp N5        &kp NUMBER_6  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &trans                  &trans      &trans                  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans        &trans        &trans                &trans  &trans  &trans      &trans  &trans  &trans          &trans  &trans  &trans  &trans  &trans
            >;
        };
    };
};
