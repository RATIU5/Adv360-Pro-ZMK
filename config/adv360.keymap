
/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */


/* THIS FILE WAS GENERATED!
 *
 * This file was generated automatically. You may or may not want to
 * edit it directly.
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

/ {
  behaviors {
    #include "macros.dtsi"

    hm: homerow_mods {
        compatible = "zmk,behavior-hold-tap";
        label = "HOMEROW_MODS";
        #binding-cells = <2>;
        tapping-term-ms = <200>;
        quick_tap_ms = <175>;
        flavor = "tap-preferred";
        bindings = <&kp>, <&kp>;
    };
  };

    keymap {
        compatible = "zmk,keymap";


        default_layer {
            bindings = <
 &kp EQUAL     &kp N1            &kp N2    &kp N3            &kp N4  &kp N5                   &tog 1                                                                          &none  &kp N6             &kp N7     &kp N8    &kp N9    &kp N0  &kp MINUS
   &kp TAB      &kp Q             &kp W     &kp E             &kp R   &kp T                    &none                                                                          &none   &kp Y              &kp U      &kp I     &kp O     &kp P   &kp BSLH
   &kp ESC      &kp A             &kp S     &kp D             &kp F   &kp G                    &none       &mo 2  &kp LALT   &none   &none  &kp RIGHT_CONTROL      &mo 2      &none   &kp H              &kp J      &kp K     &kp L  &kp SEMI    &kp SQT
 &kp LSHFT      &kp Z             &kp X     &kp C             &kp V   &kp B                    &none       &none  &kp HOME   &none   &none          &kp PG_UP      &none      &none   &kp N              &kp M  &kp COMMA   &kp DOT  &kp FSLH  &kp RSHFT
     &mo 3  &kp GRAVE  &kp LEFT_CONTROL  &kp LALT  &kp LEFT_COMMAND                    &kp BACKSPACE  &kp DELETE   &kp END                          &kp PG_DN  &kp ENTER  &kp SPACE          &kp RIGHT_COMMAND   &kp RALT  &kp LBKT  &kp RBKT      &mo 3
            >;
        };

        layer_keypad {
            bindings = <
 &trans  &trans  &trans  &trans  &trans  &trans            &tog 1                                                     &trans  &trans     &trans     &trans      &trans        &trans  &trans
 &trans  &trans  &trans  &trans  &trans  &trans             &none                                                      &none  &trans  &kp KP_N7  &kp KP_N8   &kp KP_N9  &kp KP_MINUS  &trans
 &trans  &trans  &trans  &trans  &trans  &trans             &none   &none   &none   &none   &none   &none   &none      &none  &trans  &kp KP_N4  &kp KP_N5   &kp KP_N6   &kp KP_PLUS  &trans
 &trans  &trans  &trans  &trans  &trans  &trans             &none   &none   &none   &none   &none   &none   &none      &none  &trans  &kp KP_N1  &kp KP_N2   &kp KP_N3  &kp KP_ENTER  &trans
 &trans  &trans  &trans  &trans  &trans                    &trans  &trans   &none                   &none  &trans  &kp KP_N0             &trans     &trans  &kp KP_DOT        &trans  &trans
            >;
        };

        layer_CNTRL {
            bindings = <
  &none       &none   &none   &none   &none    &none             &none                                                   &none                   &none                 &none                              &none               &none          &none   &none
  &none  &kp ESCAPE  &kp F7  &kp F8  &kp F9  &kp F10             &none                                                   &none  &kp C_AL_PREVIOUS_TASK  &kp C_AL_SELECT_TASK  &kp C_AC_DESKTOP_SHOW_ALL_WINDOWS  &kp C_AL_NEXT_TASK  &kp BACKSPACE   &none
  &none     &kp TAB  &kp F4  &kp F5  &kp F6  &kp F11             &none  &trans  &trans   &none   &none  &trans  &trans   &none          &kp LEFT_ARROW        &kp DOWN_ARROW                       &kp UP_ARROW     &kp RIGHT_ARROW     &kp DELETE   &none
  &none       &none  &kp F1  &kp F2  &kp F3  &kp F12             &none   &none  &trans   &none   &none  &trans   &none   &none                &kp HOME         &kp PAGE_DOWN                        &kp PAGE_UP             &kp END     &kp ESCAPE   &none
  &none       &none   &none   &none   &none                     &trans  &trans  &trans                  &trans  &trans  &trans                                         &none                              &none               &none          &none   &none
            >;
        };

        layer_SYM {
            bindings = <
  &none            &none             &none              &none         &none        &none             &none                                                   &none           &none             &none                 &none                  &none          &none   &none
  &none  &kp EXCLAMATION       &kp AT_SIGN           &kp HASH    &kp DOLLAR  &kp PERCENT             &none                                                   &none   &kp LESS_THAN  &kp GREATER_THAN        &kp LEFT_BRACE        &kp RIGHT_BRACE       &kp PIPE   &none
  &none     &kp KP_SLASH     &kp BACKSLASH          &kp COLON      &kp SEMI     &kp PLUS             &none   &none   &none   &none   &none   &none   &none   &none    &kp KP_MINUS      &kp KP_EQUAL  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp AMPERSAND   &none
  &none        &kp GRAVE  &kp SINGLE_QUOTE  &kp DOUBLE_QUOTES  &kp QUESTION     &kp STAR             &none   &none   &none   &none   &none   &none   &none   &none  &kp UNDERSCORE         &kp CARET      &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp TILDE   &none
  &none            &none             &none              &none         &none                         &trans  &trans   &none                   &none  &trans  &trans                             &none                 &none                  &none          &none   &none
            >;
        };

        layer_Layer__4 {
            bindings = <
 &trans  &trans  &trans  &trans  &trans  &trans            &trans                                                  &trans  &trans  &trans  &trans  &trans  &trans  &trans
 &trans  &trans  &trans  &trans  &trans  &trans            &trans                                                  &trans  &trans  &trans  &trans  &trans  &trans  &trans
 &trans  &trans  &trans  &trans  &trans  &trans            &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
 &trans  &trans  &trans  &trans  &trans  &trans            &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
 &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans                  &trans  &trans  &trans          &trans  &trans  &trans  &trans  &trans
            >;
        };

    };
};
